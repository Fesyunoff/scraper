//+build !swipe

// Code generated by Swipe v2.0.0-beta6. DO NOT EDIT.

package transport

import (
	"context"

	"github.com/fesyunoff/availability/pkg/api/service"
	"github.com/go-kit/kit/endpoint"
)

func makeScraperRequestGetAvailabilityEndpoint(s service.ScraperRequest) endpoint.Endpoint {
	return func(ctx context.Context, request interface{}) (interface{}, error) {
		req := request.(GetAvailabilityRequest)
		result, err := s.GetAvailability(ctx, req.Site)
		if err != nil {
			return nil, err
		}
		return result, nil
	}

}

func makeScraperRequestGetResponceTimeEndpoint(s service.ScraperRequest) endpoint.Endpoint {
	return func(ctx context.Context, request interface{}) (interface{}, error) {
		req := request.(GetResponceTimeRequest)
		result, err := s.GetResponceTime(ctx, req.Limit)
		if err != nil {
			return nil, err
		}
		return result, nil
	}

}

type ScraperRequestEndpointSet struct {
	GetAvailabilityEndpoint endpoint.Endpoint
	GetResponceTimeEndpoint endpoint.Endpoint
}

func MakeScraperRequestEndpointSet(svc service.ScraperRequest) ScraperRequestEndpointSet {
	return ScraperRequestEndpointSet{
		GetAvailabilityEndpoint: makeScraperRequestGetAvailabilityEndpoint(svc),
		GetResponceTimeEndpoint: makeScraperRequestGetResponceTimeEndpoint(svc),
	}
}

type GetAvailabilityRequest struct {
	Site string `json:"site"`
}
type GetResponceTimeRequest struct {
	Limit string `json:"limit"`
}
